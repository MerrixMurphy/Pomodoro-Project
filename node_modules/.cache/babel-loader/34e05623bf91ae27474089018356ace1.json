{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merri\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Timer.js\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer({\n  session,\n  breakDuration,\n  focusDuration\n}) {\n  return session ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"session-title\",\n          children: [session.label, \" for\", \" \", session.label === \"On Break\" ? minutesToDuration(breakDuration) : minutesToDuration(focusDuration), \" \", \"minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          \"data-testid\": \"session-sub-title\",\n          children: [secondsToDuration(session.timeRemaining), \" remaining\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["C:/Users/merri/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js"],"names":["minutesToDuration","secondsToDuration","Timer","session","breakDuration","focusDuration","label","timeRemaining"],"mappings":";AAAA,SAASA,iBAAT,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAf,EAA0D;AACxD,SAAOF,OAAO,gBACZ;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCAEE;AAAI,yBAAY,eAAhB;AAAA,qBACGA,OAAO,CAACG,KADX,UACsB,GADtB,EAEGH,OAAO,CAACG,KAAR,KAAkB,UAAlB,GACGN,iBAAiB,CAACI,aAAD,CADpB,GAEGJ,iBAAiB,CAACK,aAAD,CAJvB,EAIwC,GAJxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAoB,yBAAY,mBAAhC;AAAA,qBACGJ,iBAAiB,CAACE,OAAO,CAACI,aAAT,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADY,GAoBV,IApBJ;AAqBD;;KAtBQL,K;AAwBT,eAAeA,KAAf","sourcesContent":["import { minutesToDuration } from \"../utils/duration\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\n\r\nfunction Timer({ session, breakDuration, focusDuration }) {\r\n  return session ? (\r\n    <div>\r\n      {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n          <h2 data-testid=\"session-title\">\r\n            {session.label} for{\" \"}\r\n            {session.label === \"On Break\"\r\n              ? minutesToDuration(breakDuration)\r\n              : minutesToDuration(focusDuration)}{\" \"}\r\n            minutes\r\n          </h2>\r\n          {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {secondsToDuration(session.timeRemaining)} remaining\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}